<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pro.contract.mapper.PersonnelMapper" >
  <resultMap id="BaseResultMap" type="com.pro.contract.model.Personnel" >
    <constructor >
      <idArg column="pid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="fid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="detail" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="reason" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    pid, fid, detail, reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from personnel
    where pid = #{pid,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from personnel
    where pid = #{pid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pro.contract.model.Personnel" >
    insert into personnel (pid, fid, detail, 
      reason)
    values (#{pid,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}, #{detail,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pro.contract.model.Personnel" >
    insert into personnel
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        pid,
      </if>
      <if test="fid != null" >
        fid,
      </if>
      <if test="detail != null" >
        detail,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="fid != null" >
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.pro.contract.model.Personnel" >
    update personnel
    <set >
      <if test="fid != null" >
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where pid = #{pid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pro.contract.model.Personnel" >
    update personnel
    set fid = #{fid,jdbcType=INTEGER},
      detail = #{detail,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR}
    where pid = #{pid,jdbcType=INTEGER}
  </update>
<!--forech标签的使用-->
  <select id="selectPersonnel" resultType="com.pro.contract.model.Personnel" parameterType="java.util.List">
      select  * from  personnel where pid in
      <foreach collection="pid" item="pid" open="(" close=")" separator=","></foreach>
        #{pid}
  </select>

  <select id="listPager" resultType="java.util.Map" parameterType="java.util.Map">
   select a.*, b.fname,b.fsex,b.position,b.ftel,b.birth,c.deptName from user a,userinfo b,dept c
where a.fid=b.fid and a.fid=c.deptid

  </select>
  <select id="quanPersonnel" resultType="com.pro.contract.model.Personnel" parameterType="com.pro.contract.model.Personnel">
 select a.*, b.fname,b.fsex,b.position,b.ftel,b.birth,c.deptName from user a,userinfo b,dept c
where a.fid=b.fid and a.fid=c.deptid

  </select>

</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pro.rem.mapper.SalaryMapper" >
  <resultMap id="BaseResultMap" type="com.pro.rem.model.Salary" >
    <constructor >
      <arg column="userid" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="bwage" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="housefund" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="reimbursement" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="paward" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="overtime" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="insur" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="pre" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="sastatus" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="smonth" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="syear" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="sum" jdbcType="REAL" javaType="java.lang.Float" />
      <arg column="remark" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.pro.rem.model.Salary" >
    insert into salary (userid, bwage, housefund, 
      reimbursement, paward, overtime, 
      insur, pre, sastatus, smonth, 
      syear, sum, remark)
    values (#{userid,jdbcType=INTEGER}, #{bwage,jdbcType=REAL}, #{housefund,jdbcType=REAL}, 
      #{reimbursement,jdbcType=REAL}, #{paward,jdbcType=REAL}, #{overtime,jdbcType=REAL}, 
      #{insur,jdbcType=REAL}, #{pre,jdbcType=REAL}, #{sastatus,jdbcType=INTEGER}, #{smonth,jdbcType=INTEGER}, 
      #{syear,jdbcType=INTEGER}, #{sum,jdbcType=REAL}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pro.rem.model.Salary" >
    insert into salary
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="bwage != null" >
        bwage,
      </if>
      <if test="housefund != null" >
        housefund,
      </if>
      <if test="reimbursement != null" >
        reimbursement,
      </if>
      <if test="paward != null" >
        paward,
      </if>
      <if test="overtime != null" >
        overtime,
      </if>
      <if test="insur != null" >
        insur,
      </if>
      <if test="pre != null" >
        pre,
      </if>
      <if test="sastatus != null" >
        sastatus,
      </if>
      <if test="smonth != null" >
        smonth,
      </if>
      <if test="syear != null" >
        syear,
      </if>
      <if test="sum != null" >
        sum,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="bwage != null" >
        #{bwage,jdbcType=REAL},
      </if>
      <if test="housefund != null" >
        #{housefund,jdbcType=REAL},
      </if>
      <if test="reimbursement != null" >
        #{reimbursement,jdbcType=REAL},
      </if>
      <if test="paward != null" >
        #{paward,jdbcType=REAL},
      </if>
      <if test="overtime != null" >
        #{overtime,jdbcType=REAL},
      </if>
      <if test="insur != null" >
        #{insur,jdbcType=REAL},
      </if>
      <if test="pre != null" >
        #{pre,jdbcType=REAL},
      </if>
      <if test="sastatus != null" >
        #{sastatus,jdbcType=INTEGER},
      </if>
      <if test="smonth != null" >
        #{smonth,jdbcType=INTEGER},
      </if>
      <if test="syear != null" >
        #{syear,jdbcType=INTEGER},
      </if>
      <if test="sum != null" >
        #{sum,jdbcType=REAL},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <!--通过员工id查询薪酬-->
  <select id="SelectById" resultType="java.util.Map" parameterType="java.util.Map">
        select a.*,b.username,c.deptName,b.level from salary a,user b ,dept c where a.userid=b.userid and c.deptid=b.fid
        and b.userid=#{userid} and a.sastatus like #{sastatus}
    </select>
  <!--查询所有员工薪酬-->
  <select id="getAll" resultType="java.util.Map" parameterType="java.util.Map">
        select a.*,b.username,c.deptName,b.level from salary a,user b ,dept c where a.userid=b.userid and c.deptid=b.fid
        and c.deptName like #{deptName} and a.sastatus like #{sastatus} and  a.sastatus!=3
    </select>
  <!--通过状态查询所有员工薪酬-->
  <select id="getAllBySta" resultType="java.util.Map" parameterType="java.util.Map">
        select a.*,b.username,c.deptName,b.level from salary a,user b ,dept c where a.userid=b.userid and c.deptid=b.fid
        and c.deptName like #{deptName} and a.sastatus=#{sastatus} and  a.sastatus!=3
    </select>

  <select id="SalaryRep" resultType="java.util.Map" parameterType="com.pro.rem.model.Timecard">
        select * from salary where smonth=#{month} and syear=#{tyear} and userid=#{fid} and sastatus in(1,2)
    </select>
  <!--查询所有待审批的员工工资条总数-->
  <select id="approval" resultType="java.lang.Integer" parameterType="java.util.Map">
        select count(*) from salary where sastatus=#{sastatus}
    </select>
  <!--修改员工薪酬状态为驳回-->
  <update id="updateSalStatus" parameterType="java.util.Map">
    update salary set sastatus=#{sastatus},remark=#{remark} where userid=#{id}
  </update>
  <!--修改员工薪酬状态为删除-->
  <update id="updateSalStatusF" parameterType="java.util.Map">
    update salary set sastatus=#{sastatus} where userid=#{id}
  </update>
  <!--将员工待审批状态修改薪酬状态为审批通过-->
  <update id="updateSalStatusT" parameterType="java.util.Map">
    update salary set sastatus=#{sastatus} where userid=#{id} and sastatus=1
  </update>
  <!--将员工驳回状态修改薪酬状态为待审批-->
  <update id="updSp" parameterType="java.util.Map">
    update salary set sastatus=1 where userid=#{id} and syear=#{syear} and smonth=#{smonth}
  </update>
</mapper>